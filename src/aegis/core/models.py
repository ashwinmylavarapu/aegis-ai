"""
Core Pydantic models for Aegis data structures.
"""
from typing import List, Dict, Any, Literal, Optional
from pydantic import BaseModel, Field
import uuid

class Goal(BaseModel):
    """Represents the initial user goal."""
    run_id: str = Field(default_factory=lambda: str(uuid.uuid4()))
    description: str
    goal_type: Literal["natural_language"]
    prompt: str

class Step(BaseModel):
    """Represents a single step in an execution plan."""
    skill: Optional[str] = None
    action: Optional[str] = None
    url: Optional[str] = None
    selector: Optional[str] = None
    text: Optional[str] = None
    key: Optional[str] = None
    limit: Optional[int] = None
    fields: Optional[List[str]] = None
    output_file: Optional[str] = None
    wait_for_navigation: bool = False
    timeout: Optional[int] = None
    duration_seconds: Optional[int] = None # Add new field for waiting

class Plan(BaseModel):
    """Represents the execution plan generated by the Planner."""
    run_id: str
    summary: str
    steps: List[Step]

class LockedPlan(Plan):
    """Represents the final, immutable, and approved plan."""
    plan_hash: str
    aegis_version: str = "1.5.0"
    approved_by: str
    approved_at_utc: str